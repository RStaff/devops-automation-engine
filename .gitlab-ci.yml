stages:
  - build
  - push
  - deploy

variables:
  IMAGE_NAME: "$CI_REGISTRY_IMAGE/k8s-app"
  IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"

build_image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t $IMAGE_NAME:$IMAGE_TAG ./k8s-app
  only:
    - main

push_image:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push $IMAGE_NAME:$IMAGE_TAG
  only:
    - main

update_manifest_and_sync:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache git openssh
  script:
    - echo "$SSH_PRIVATE_KEY" > /tmp/deploy_key && chmod 600 /tmp/deploy_key
    - mkdir -p ~/.ssh && ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - 'GIT_SSH_COMMAND="ssh -i /tmp/deploy_key" git clone git@gitlab.com:rossstafford1/devops-automation-setup.git'
    - cd devops-automation-setup/argocd
    - 'sed -i "s|image: .*$|image: $IMAGE_NAME:$IMAGE_TAG|" application.yaml'
    - 'GIT_SSH_COMMAND="ssh -i /tmp/deploy_key" git add .'
    - 'GIT_SSH_COMMAND="ssh -i /tmp/deploy_key" git commit -m "Update image to $IMAGE_TAG"'
    - 'GIT_SSH_COMMAND="ssh -i /tmp/deploy_key" git push'
  only:
    - main
